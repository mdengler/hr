#!/bin/bash

# The MIT License (MIT)
#
# Copyright (c) 2013 Gil Gonçalves
#
# Permission is hereby granted, free of charge, to any person obtaining a copy of
# this software and associated documentation files (the "Software"), to deal in
# the Software without restriction, including without limitation the rights to
# use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
# the Software, and to permit persons to whom the Software is furnished to do so,
# subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
# FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
# COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
# IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
# CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.


COLOR_ARG_DEFAULT='defaultfg'
space_string='━'
ansi_arg=""

function hr {
    space_character="$1"
    color "${2:-${COLOR_ARG_DEFAULT}}"
    ansi_arg="$3"
    columns="$(tput cols)"

    ansi="${ansi_arg}${color}"
    if [[ -n "$ansi" ]]; then
        printf "${ansi}"
    fi

    eval printf ${space_character}%.0s '{1..'"$columns"\}

    if [[ -n "$ansi" ]]; then
        printf "\x1B[0m"
    fi

    printf "\n"
}

function color {
    if [[ "$1" != *[!0-9]* ]]; then
        color="\x1B[38;5;$1m"
    else
        case "$1" in
            'black') color='\x1B[30m';;
            'red') color='\x1B[31m';;
            'green') color='\x1B[32m';;
            'yellow') color='\x1B[33m';;
            'blue') color='\x1B[34m';;
            'magenta') color='\x1B[35m';;
            'cyan') color='\x1B[36m';;
            'white') color='\x1B[97m';;
            'defaultfg') color='\x1B[39m';;
        esac
    fi
}

while getopts “p:c:boCr” OPTION
do
    case "$OPTION" in
        b) ansi_arg="${ansi_arg}\x1B[5m";;
        r) ansi_arg="${ansi_arg}\x1B[7m";;
        c) color_arg="$OPTARG";;
        C) color_arg="";;
        p) space_string="$OPTARG";;
        o) space_string="_‾";;
    esac
done

# from http://dewine.wordpress.com/2012/02/09/using-getopts-command-in-bash-to-parse-positional-parameters-and-non-option-arguments/
shift $(expr "$OPTIND" - 1)

if [[ -n "$1" ]]; then
    space_string="$1"
fi

string_size="${#space_string}";
for (( char_index=0; char_index<"${string_size}"; char_index++ ))
do
    hr "${space_string:char_index:1}" "${color_arg}" "${ansi_arg}"
done

